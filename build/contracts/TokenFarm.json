{
  "contractName": "TokenFarm",
  "abi": [
    {
      "inputs": [],
      "name": "daiToken",
      "outputs": [
        {
          "internalType": "contract DaiToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "fijiToken",
      "outputs": [
        {
          "internalType": "contract FijiToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isStaking",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"daiToken\",\"outputs\":[{\"internalType\":\"contract DaiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fijiToken\",\"outputs\":[{\"internalType\":\"contract FijiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/tomil/Documents/GitHub/token-farming/contracts/TokenFarm.sol\":\"TokenFarm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/tomil/Documents/GitHub/token-farming/contracts/DaiToken.sol\":{\"keccak256\":\"0x92a9660bc89bfe76be684bba7b699c71631ced514853c1e94d88d4691be0c9fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea08904de2724ea8ce0c28c02185ad7ff4403b9235fb5676b595e22a1bc10c4a\",\"dweb:/ipfs/QmZPJPc6kBpDwy5Fv4mLkex8KiB3roJca5BD2RPJ68cRZk\"]},\"/C/Users/tomil/Documents/GitHub/token-farming/contracts/FijiToken.sol\":{\"keccak256\":\"0xdef4c6dc426d6fb36b68929f2f96c5c4bb15e86a2fc28c4175fa6b60c10f5242\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7826fac1daabe8c68a40f5c3d02af9c0ec7aa9677fc09afec06b89e8be258519\",\"dweb:/ipfs/QmPPXxhq6DA4DWUMobFMQzDHcUzM9X8xjYkbKTEF52qG5h\"]},\"/C/Users/tomil/Documents/GitHub/token-farming/contracts/TokenFarm.sol\":{\"keccak256\":\"0x08f69f885a145c1041335c6aec171172313e460548389da88431b7205f20098d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b2a39e38084e17b0bbb3fbe8673afc9bb8473a8e2f8859a4b7c2100ee166e31\",\"dweb:/ipfs/QmYS3wKF2wm71Ppwg2xCKvFqpAM3b8sqNtGfoREP16YXs4\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600a81526020017f546f6b656e204661726d000000000000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b5061010d565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261009857600085556100df565b82601f106100b157805160ff19168380011785556100df565b828001600101855582156100df579182015b828111156100de5782518255916020019190600101906100c3565b5b5090506100ec91906100f0565b5090565b5b808211156101095760008160009055506001016100f1565b5090565b6108118061011c6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063be22f5461161005b578063be22f546146101f0578063c17f695a14610224578063c93c8f3414610258578063fd5e6dd1146102b257610088565b806306fdde031461008d57806345bc78ab146101105780636f49712b146101685780637547c7a3146101c2575b600080fd5b61009561030a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100d55780820151818401526020810190506100ba565b50505050905090810190601f1680156101025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101526004803603602081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a8565b6040518082815260200191505060405180910390f35b6101aa6004803603602081101561017e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c0565b60405180821515815260200191505060405180910390f35b6101ee600480360360208110156101d857600080fd5b81019080803590602001909291905050506103e0565b005b6101f8610730565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61022c610756565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61029a6004803603602081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061077c565b60405180821515815260200191505060405180910390f35b6102de600480360360208110156102c857600080fd5b810190808035906020019092919050505061079c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b505050505081565b60066020528060005260406000206000915090505481565b60056020528060005260406000206000915054906101000a900460ff1681565b60008111610456576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f616d6f756e742063616e6e6f742062652030000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561050757600080fd5b505af115801561051b573d6000803e3d6000fd5b505050506040513d602081101561053157600080fd5b81019080805190602001909291905050505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661067d576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600381815481106107ac57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122088db85f72f1adeeb1596867fdeeaadb46843211b5c7b2edc513db7f52f150a7164736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063be22f5461161005b578063be22f546146101f0578063c17f695a14610224578063c93c8f3414610258578063fd5e6dd1146102b257610088565b806306fdde031461008d57806345bc78ab146101105780636f49712b146101685780637547c7a3146101c2575b600080fd5b61009561030a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100d55780820151818401526020810190506100ba565b50505050905090810190601f1680156101025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101526004803603602081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103a8565b6040518082815260200191505060405180910390f35b6101aa6004803603602081101561017e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103c0565b60405180821515815260200191505060405180910390f35b6101ee600480360360208110156101d857600080fd5b81019080803590602001909291905050506103e0565b005b6101f8610730565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61022c610756565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61029a6004803603602081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061077c565b60405180821515815260200191505060405180910390f35b6102de600480360360208110156102c857600080fd5b810190808035906020019092919050505061079c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b505050505081565b60066020528060005260406000206000915090505481565b60056020528060005260406000206000915054906101000a900460ff1681565b60008111610456576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f616d6f756e742063616e6e6f742062652030000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561050757600080fd5b505af115801561051b573d6000803e3d6000fd5b505050506040513d602081101561053157600080fd5b81019080805190602001909291905050505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661067d576003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600381815481106107ac57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122088db85f72f1adeeb1596867fdeeaadb46843211b5c7b2edc513db7f52f150a7164736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "117:1292:2:-:0;;;143:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;117:1292;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "117:1292:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;143:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;330:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;670:666;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;185:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;216:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;282:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;251:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;143:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;378:46::-;;;;;;;;;;;;;;;;;:::o;330:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;670:666::-;785:1;775:7;:11;767:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;883:8;;;;;;;;;;;:21;;;905:10;925:4;932:7;883:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1046:7;1017:14;:26;1032:10;1017:26;;;;;;;;;;;;;;;;:36;988:14;:26;1003:10;988:26;;;;;;;;;;;;;;;:65;;;;1141:9;:21;1151:10;1141:21;;;;;;;;;;;;;;;;;;;;;;;;;1136:79;;1179:7;1192:10;1179:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:79;1285:4;1261:9;:21;1271:10;1261:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1324:4;1300:9;:21;1310:10;1300:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;670:666;:::o;185:24::-;;;;;;;;;;;;;:::o;216:26::-;;;;;;;;;;;;;:::o;282:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;251:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >0.7.4;\r\n\r\nimport \"./FijiToken.sol\";\r\nimport \"./DaiToken.sol\";\r\n\r\n\r\ncontract TokenFarm {\r\n    string public name = \"Token Farm\";\r\n\r\n    DaiToken public daiToken;\r\n    FijiToken public fijiToken;\r\n\r\n    address[] public stakers;\r\n    mapping(address => bool) public hasStaked;\r\n    mapping(address => bool) public isStaking;\r\n    mapping(address => uint) public stakingBalance;\r\n\r\n\r\n    // constructor(FijiToken _fijiToken, DaiToken _daiToken ) {\r\n    //     daiToken = _daiToken;\r\n    //     fijiToken = _fijiToken;\r\n    // }\r\n\r\n    // constructor () public {\r\n        \r\n    // }\r\n\r\n    // 1. Stake tokens (Deposit)\r\n    function stakeTokens(uint _amount) public {\r\n\r\n        // require amount greater than 0\r\n        require(_amount > 0, \"amount cannot be 0\");\r\n\r\n        // transfer dai tokens to this contract for staking\r\n        daiToken.transferFrom(msg.sender, address(this), _amount);\r\n\r\n        // update staking balance\r\n        stakingBalance[msg.sender] = stakingBalance[msg.sender] + _amount;\r\n\r\n        // add user to stakers array if they have not staked already\r\n        if (!hasStaked[msg.sender]) {\r\n            stakers.push(msg.sender);\r\n        }\r\n\r\n        // update staking status\r\n        hasStaked[msg.sender] = true;\r\n        isStaking[msg.sender] = true;\r\n    }\r\n\r\n    // 2. Unstaking Tokens (Withdraw)\r\n\r\n    // 3. Issuing Tokens \r\n}",
  "sourcePath": "C:/Users/tomil/Documents/GitHub/token-farming/contracts/TokenFarm.sol",
  "ast": {
    "absolutePath": "/C/Users/tomil/Documents/GitHub/token-farming/contracts/TokenFarm.sol",
    "exportedSymbols": {
      "DaiToken": [
        180
      ],
      "FijiToken": [
        361
      ],
      "TokenFarm": [
        453
      ]
    },
    "id": 454,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 363,
        "literals": [
          "solidity",
          ">",
          "0.7",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/C/Users/tomil/Documents/GitHub/token-farming/contracts/FijiToken.sol",
        "file": "./FijiToken.sol",
        "id": 364,
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 362,
        "src": "60:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/tomil/Documents/GitHub/token-farming/contracts/DaiToken.sol",
        "file": "./DaiToken.sol",
        "id": 365,
        "nodeType": "ImportDirective",
        "scope": 454,
        "sourceUnit": 181,
        "src": "87:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 453,
        "linearizedBaseContracts": [
          453
        ],
        "name": "TokenFarm",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 368,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "143:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 366,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "143:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "546f6b656e204661726d",
              "id": 367,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "164:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_7ef2af06274081bff57a7ff4d565dc82242a6e7514d8f9a4401c3717fab6107c",
                "typeString": "literal_string \"Token Farm\""
              },
              "value": "Token Farm"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be22f546",
            "id": 370,
            "mutability": "mutable",
            "name": "daiToken",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "185:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DaiToken_$180",
              "typeString": "contract DaiToken"
            },
            "typeName": {
              "id": 369,
              "name": "DaiToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 180,
              "src": "185:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DaiToken_$180",
                "typeString": "contract DaiToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c17f695a",
            "id": 372,
            "mutability": "mutable",
            "name": "fijiToken",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "216:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FijiToken_$361",
              "typeString": "contract FijiToken"
            },
            "typeName": {
              "id": 371,
              "name": "FijiToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 361,
              "src": "216:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FijiToken_$361",
                "typeString": "contract FijiToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 375,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "251:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 373,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "251:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 374,
              "nodeType": "ArrayTypeName",
              "src": "251:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c93c8f34",
            "id": 379,
            "mutability": "mutable",
            "name": "hasStaked",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "282:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 378,
              "keyType": {
                "id": 376,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "290:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "282:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 377,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "301:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6f49712b",
            "id": 383,
            "mutability": "mutable",
            "name": "isStaking",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "330:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 382,
              "keyType": {
                "id": 380,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "338:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "330:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 381,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "349:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "45bc78ab",
            "id": 387,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nodeType": "VariableDeclaration",
            "scope": 453,
            "src": "378:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 386,
              "keyType": {
                "id": 384,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "378:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 385,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "397:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "712:624:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 393,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "775:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "785:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "775:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742063616e6e6f742062652030",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "788:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        },
                        "value": "amount cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                          "typeString": "literal_string \"amount cannot be 0\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "767:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "767:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "905:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "905:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 406,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "925:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$453",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$453",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "917:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 404,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "917:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 408,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "932:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 399,
                        "name": "daiToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "883:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaiToken_$180",
                          "typeString": "contract DaiToken"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 179,
                      "src": "883:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "883:57:2"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 411,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "988:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 414,
                      "indexExpression": {
                        "expression": {
                          "id": 412,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1003:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "988:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 415,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "1017:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 418,
                        "indexExpression": {
                          "expression": {
                            "id": 416,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1032:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1032:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1017:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 419,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "1046:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1017:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "988:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "988:65:2"
                },
                {
                  "condition": {
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1140:22:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 423,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1141:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 426,
                      "indexExpression": {
                        "expression": {
                          "id": 424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1151:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1151:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1141:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 436,
                  "nodeType": "IfStatement",
                  "src": "1136:79:2",
                  "trueBody": {
                    "id": 435,
                    "nodeType": "Block",
                    "src": "1164:51:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 431,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1192:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1192:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 428,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "1179:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1179:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1179:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "1179:24:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 437,
                        "name": "hasStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 379,
                        "src": "1261:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 440,
                      "indexExpression": {
                        "expression": {
                          "id": 438,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1271:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1271:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1261:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1285:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1261:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:28:2"
                },
                {
                  "expression": {
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 444,
                        "name": "isStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 383,
                        "src": "1300:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 447,
                      "indexExpression": {
                        "expression": {
                          "id": 445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1310:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1310:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1300:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1324:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1300:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "1300:28:2"
                }
              ]
            },
            "functionSelector": "7547c7a3",
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "691:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:14:2"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:2"
            },
            "scope": 453,
            "src": "670:666:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 454,
        "src": "117:1292:2"
      }
    ],
    "src": "33:1376:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/tomil/Documents/GitHub/token-farming/contracts/TokenFarm.sol",
      "exportedSymbols": {
        "DaiToken": [
          180
        ],
        "FijiToken": [
          361
        ],
        "TokenFarm": [
          453
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">",
            "0.7",
            ".4"
          ]
        },
        "id": 363,
        "name": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 362,
          "absolutePath": "/C/Users/tomil/Documents/GitHub/token-farming/contracts/FijiToken.sol",
          "file": "./FijiToken.sol",
          "scope": 454,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 364,
        "name": "ImportDirective",
        "src": "60:25:2"
      },
      {
        "attributes": {
          "SourceUnit": 181,
          "absolutePath": "/C/Users/tomil/Documents/GitHub/token-farming/contracts/DaiToken.sol",
          "file": "./DaiToken.sol",
          "scope": 454,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 365,
        "name": "ImportDirective",
        "src": "87:24:2"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            453
          ],
          "name": "TokenFarm",
          "scope": 454
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "06fdde03",
              "mutability": "mutable",
              "name": "name",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 366,
                "name": "ElementaryTypeName",
                "src": "143:6:2"
              },
              {
                "attributes": {
                  "hexvalue": "546f6b656e204661726d",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "string",
                  "type": "literal_string \"Token Farm\"",
                  "value": "Token Farm"
                },
                "id": 367,
                "name": "Literal",
                "src": "164:12:2"
              }
            ],
            "id": 368,
            "name": "VariableDeclaration",
            "src": "143:33:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "be22f546",
              "mutability": "mutable",
              "name": "daiToken",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract DaiToken",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "DaiToken",
                  "referencedDeclaration": 180,
                  "type": "contract DaiToken"
                },
                "id": 369,
                "name": "UserDefinedTypeName",
                "src": "185:8:2"
              }
            ],
            "id": 370,
            "name": "VariableDeclaration",
            "src": "185:24:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c17f695a",
              "mutability": "mutable",
              "name": "fijiToken",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract FijiToken",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "FijiToken",
                  "referencedDeclaration": 361,
                  "type": "contract FijiToken"
                },
                "id": 371,
                "name": "UserDefinedTypeName",
                "src": "216:9:2"
              }
            ],
            "id": 372,
            "name": "VariableDeclaration",
            "src": "216:26:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "fd5e6dd1",
              "mutability": "mutable",
              "name": "stakers",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 373,
                    "name": "ElementaryTypeName",
                    "src": "251:7:2"
                  }
                ],
                "id": 374,
                "name": "ArrayTypeName",
                "src": "251:9:2"
              }
            ],
            "id": 375,
            "name": "VariableDeclaration",
            "src": "251:24:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c93c8f34",
              "mutability": "mutable",
              "name": "hasStaked",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 376,
                    "name": "ElementaryTypeName",
                    "src": "290:7:2"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 377,
                    "name": "ElementaryTypeName",
                    "src": "301:4:2"
                  }
                ],
                "id": 378,
                "name": "Mapping",
                "src": "282:24:2"
              }
            ],
            "id": 379,
            "name": "VariableDeclaration",
            "src": "282:41:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "6f49712b",
              "mutability": "mutable",
              "name": "isStaking",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 380,
                    "name": "ElementaryTypeName",
                    "src": "338:7:2"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 381,
                    "name": "ElementaryTypeName",
                    "src": "349:4:2"
                  }
                ],
                "id": 382,
                "name": "Mapping",
                "src": "330:24:2"
              }
            ],
            "id": 383,
            "name": "VariableDeclaration",
            "src": "330:41:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "45bc78ab",
              "mutability": "mutable",
              "name": "stakingBalance",
              "scope": 453,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 384,
                    "name": "ElementaryTypeName",
                    "src": "386:7:2"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 385,
                    "name": "ElementaryTypeName",
                    "src": "397:4:2"
                  }
                ],
                "id": 386,
                "name": "Mapping",
                "src": "378:24:2"
              }
            ],
            "id": 387,
            "name": "VariableDeclaration",
            "src": "378:46:2"
          },
          {
            "attributes": {
              "functionSelector": "7547c7a3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "stakeTokens",
              "scope": 453,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_amount",
                      "scope": 452,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 388,
                        "name": "ElementaryTypeName",
                        "src": "691:4:2"
                      }
                    ],
                    "id": 389,
                    "name": "VariableDeclaration",
                    "src": "691:12:2"
                  }
                ],
                "id": 390,
                "name": "ParameterList",
                "src": "690:14:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 391,
                "name": "ParameterList",
                "src": "712:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_d6709398e5a0b78efe2c0f926a4bede798ed30235f19b4d9a0883f2ebb65f426",
                                  "typeString": "literal_string \"amount cannot be 0\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 392,
                            "name": "Identifier",
                            "src": "767:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 389,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 393,
                                "name": "Identifier",
                                "src": "775:7:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 394,
                                "name": "Literal",
                                "src": "785:1:2"
                              }
                            ],
                            "id": 395,
                            "name": "BinaryOperation",
                            "src": "775:11:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "616d6f756e742063616e6e6f742062652030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"amount cannot be 0\"",
                              "value": "amount cannot be 0"
                            },
                            "id": 396,
                            "name": "Literal",
                            "src": "788:20:2"
                          }
                        ],
                        "id": 397,
                        "name": "FunctionCall",
                        "src": "767:42:2"
                      }
                    ],
                    "id": 398,
                    "name": "ExpressionStatement",
                    "src": "767:42:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 179,
                              "type": "function (address,address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 370,
                                  "type": "contract DaiToken",
                                  "value": "daiToken"
                                },
                                "id": 399,
                                "name": "Identifier",
                                "src": "883:8:2"
                              }
                            ],
                            "id": 401,
                            "name": "MemberAccess",
                            "src": "883:21:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 402,
                                "name": "Identifier",
                                "src": "905:3:2"
                              }
                            ],
                            "id": 403,
                            "name": "MemberAccess",
                            "src": "905:10:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokenFarm_$453",
                                      "typeString": "contract TokenFarm"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 404,
                                    "name": "ElementaryTypeName",
                                    "src": "917:7:2"
                                  }
                                ],
                                "id": 405,
                                "name": "ElementaryTypeNameExpression",
                                "src": "917:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract TokenFarm",
                                  "value": "this"
                                },
                                "id": 406,
                                "name": "Identifier",
                                "src": "925:4:2"
                              }
                            ],
                            "id": 407,
                            "name": "FunctionCall",
                            "src": "917:13:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 389,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 408,
                            "name": "Identifier",
                            "src": "932:7:2"
                          }
                        ],
                        "id": 409,
                        "name": "FunctionCall",
                        "src": "883:57:2"
                      }
                    ],
                    "id": 410,
                    "name": "ExpressionStatement",
                    "src": "883:57:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 387,
                                  "type": "mapping(address => uint256)",
                                  "value": "stakingBalance"
                                },
                                "id": 411,
                                "name": "Identifier",
                                "src": "988:14:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 412,
                                    "name": "Identifier",
                                    "src": "1003:3:2"
                                  }
                                ],
                                "id": 413,
                                "name": "MemberAccess",
                                "src": "1003:10:2"
                              }
                            ],
                            "id": 414,
                            "name": "IndexAccess",
                            "src": "988:26:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 387,
                                      "type": "mapping(address => uint256)",
                                      "value": "stakingBalance"
                                    },
                                    "id": 415,
                                    "name": "Identifier",
                                    "src": "1017:14:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 416,
                                        "name": "Identifier",
                                        "src": "1032:3:2"
                                      }
                                    ],
                                    "id": 417,
                                    "name": "MemberAccess",
                                    "src": "1032:10:2"
                                  }
                                ],
                                "id": 418,
                                "name": "IndexAccess",
                                "src": "1017:26:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 389,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 419,
                                "name": "Identifier",
                                "src": "1046:7:2"
                              }
                            ],
                            "id": 420,
                            "name": "BinaryOperation",
                            "src": "1017:36:2"
                          }
                        ],
                        "id": 421,
                        "name": "Assignment",
                        "src": "988:65:2"
                      }
                    ],
                    "id": 422,
                    "name": "ExpressionStatement",
                    "src": "988:65:2"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 379,
                                  "type": "mapping(address => bool)",
                                  "value": "hasStaked"
                                },
                                "id": 423,
                                "name": "Identifier",
                                "src": "1141:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 424,
                                    "name": "Identifier",
                                    "src": "1151:3:2"
                                  }
                                ],
                                "id": 425,
                                "name": "MemberAccess",
                                "src": "1151:10:2"
                              }
                            ],
                            "id": 426,
                            "name": "IndexAccess",
                            "src": "1141:21:2"
                          }
                        ],
                        "id": 427,
                        "name": "UnaryOperation",
                        "src": "1140:22:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "type": "function (address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 375,
                                          "type": "address[] storage ref",
                                          "value": "stakers"
                                        },
                                        "id": 428,
                                        "name": "Identifier",
                                        "src": "1179:7:2"
                                      }
                                    ],
                                    "id": 430,
                                    "name": "MemberAccess",
                                    "src": "1179:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 431,
                                        "name": "Identifier",
                                        "src": "1192:3:2"
                                      }
                                    ],
                                    "id": 432,
                                    "name": "MemberAccess",
                                    "src": "1192:10:2"
                                  }
                                ],
                                "id": 433,
                                "name": "FunctionCall",
                                "src": "1179:24:2"
                              }
                            ],
                            "id": 434,
                            "name": "ExpressionStatement",
                            "src": "1179:24:2"
                          }
                        ],
                        "id": 435,
                        "name": "Block",
                        "src": "1164:51:2"
                      }
                    ],
                    "id": 436,
                    "name": "IfStatement",
                    "src": "1136:79:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 379,
                                  "type": "mapping(address => bool)",
                                  "value": "hasStaked"
                                },
                                "id": 437,
                                "name": "Identifier",
                                "src": "1261:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 438,
                                    "name": "Identifier",
                                    "src": "1271:3:2"
                                  }
                                ],
                                "id": 439,
                                "name": "MemberAccess",
                                "src": "1271:10:2"
                              }
                            ],
                            "id": 440,
                            "name": "IndexAccess",
                            "src": "1261:21:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 441,
                            "name": "Literal",
                            "src": "1285:4:2"
                          }
                        ],
                        "id": 442,
                        "name": "Assignment",
                        "src": "1261:28:2"
                      }
                    ],
                    "id": 443,
                    "name": "ExpressionStatement",
                    "src": "1261:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 383,
                                  "type": "mapping(address => bool)",
                                  "value": "isStaking"
                                },
                                "id": 444,
                                "name": "Identifier",
                                "src": "1300:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 445,
                                    "name": "Identifier",
                                    "src": "1310:3:2"
                                  }
                                ],
                                "id": 446,
                                "name": "MemberAccess",
                                "src": "1310:10:2"
                              }
                            ],
                            "id": 447,
                            "name": "IndexAccess",
                            "src": "1300:21:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 448,
                            "name": "Literal",
                            "src": "1324:4:2"
                          }
                        ],
                        "id": 449,
                        "name": "Assignment",
                        "src": "1300:28:2"
                      }
                    ],
                    "id": 450,
                    "name": "ExpressionStatement",
                    "src": "1300:28:2"
                  }
                ],
                "id": 451,
                "name": "Block",
                "src": "712:624:2"
              }
            ],
            "id": 452,
            "name": "FunctionDefinition",
            "src": "670:666:2"
          }
        ],
        "id": 453,
        "name": "ContractDefinition",
        "src": "117:1292:2"
      }
    ],
    "id": 454,
    "name": "SourceUnit",
    "src": "33:1376:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x61dC91dea885D3fba21ADb8E83D3539E00aFcc0a",
      "transactionHash": "0x8bfa362ecd2b4c17bc775124e50bc7b49008ffdefbfaf04ce3566e8ea41fee75"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-09T00:21:16.823Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}